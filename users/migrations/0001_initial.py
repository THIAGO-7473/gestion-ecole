# Generated by Django 5.1.7 on 2025-05-06 11:05

import django.contrib.auth.validators
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': "Un utilisateur avec ce nom d'utilisateur existe déjà."}, help_text='150 caractères maximum. Lettres, chiffres et @/./+/-/_ seulement.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name="nom d'utilisateur")),
                ('email', models.EmailField(blank=True, default='', max_length=254, verbose_name='adresse email')),
                ('postnom', models.CharField(blank=True, max_length=100, null=True, verbose_name='postnom')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message="Le numéro de téléphone doit être au format: '+999999999'. Jusqu'à 15 chiffres.", regex='^\\+?1?\\d{9,15}$')], verbose_name='téléphone')),
                ('adresse', models.TextField(blank=True, null=True, verbose_name='adresse')),
                ('date_naissance', models.DateField(blank=True, null=True, verbose_name='date de naissance')),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('enseignant', 'Enseignant'), ('personnel', 'Personnel administratif'), ('parent', 'Parent/Tuteur'), ('eleve', 'Élève')], db_index=True, default='eleve', max_length=20, verbose_name='rôle')),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('suspendu', 'Suspendu')], db_index=True, default='actif', max_length=20, verbose_name='statut')),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date de création')),
                ('dernier_login', models.DateTimeField(blank=True, null=True, verbose_name='dernière connexion')),
                ('photo_profil', models.ImageField(blank=True, max_length=255, null=True, upload_to='profils/', verbose_name='photo de profil')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'utilisateur',
                'verbose_name_plural': 'utilisateurs',
                'ordering': ['-date_creation'],
                'indexes': [models.Index(fields=['username'], name='users_utili_usernam_94f63d_idx'), models.Index(fields=['role'], name='users_utili_role_ac60e1_idx'), models.Index(fields=['statut'], name='users_utili_statut_96c108_idx')],
            },
        ),
    ]
